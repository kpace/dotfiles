" Vundle configuration

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'L9'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'  " show modified files in NERDTree
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'             " repeat plugin mappings
Plugin 'mileszs/ack.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'


" C#
Plugin 'OmniSharp/omnisharp-vim'
Plugin 'tpope/vim-dispatch'

" Python Plugins
Plugin 'nvie/vim-flake8'
Plugin 'jnurmine/Zenburn'
Plugin 'python-mode/python-mode'
Plugin 'tweekmonster/django-plus.vim'
Plugin 'plytophogy/vim-virtualenv'

" JS Plugins
Plugin 'jelera/vim-javascript-syntax'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'marijnh/tern_for_vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" scrooloose/syntastic configurations
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:pymode_python = 'python3'
let g:pymode_folding = 1
let g:pymode_rope_complete_on_dot = 1
let g:pymode_virtualenv_path = $HOME . '/.virtualenvs/filetuning'

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_enable_python_checker = 0
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_css_checkers = ['csslint']

let g:ycm_show_diagnostics_ui = 0

" airline
let g:airline_powerline_fonts = 1

" gitgutter config
let g:gitgutter_highlight_lines = 0

" Ctrlp config
set wildignore+=*/tmp/*,*/node_modules/*,*/bower_components/*,*/dist/*,*.so,*.swp,*.zip,*.pyc,*.sql

let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_custom_ignore = 'node_modules\|bower_components\|.git|.pyc'

" Custom configurations
set number relativenumber
set cursorline
set hlsearch
set ic
set smartcase
set splitbelow
set splitright
set encoding=utf-8
let mapleader=" " " map <Leader> to <Space>

" split navigations
nnoremap <C-j> <C-W><C-J>
nnoremap <C-k> <C-W><C-K>
nnoremap <C-l> <C-W><C-L>
nnoremap <C-h> <C-W><C-H>

nnoremap % v%
vnoremap <leader>s :sort<CR>

nmap oo <Esc>k " insert new line under without leaving normal mode
nmap OO  <Esc>j " insert new line above  without leaving normal mode
nmap nf  :NERDTreeFind<CR>
nmap mf  :NERDTreeToggle<CR>
nmap ff  :Ack<Space>
inoremap jj <Esc>
map <leader>ev  :tabe ~/.vimrc <CR>
map <leader>sv  :source ~/.vimrc <CR>
map <leader>q  :q <CR>
map <leader>w  :w <CR>
map <leader>c  :tabc <CR>
map <leader>e  :tabe <CR>
map <leader>p  :CtrlPClearAllCaches <CR>
map <leader>dt  :diffthis <CR>
map <leader>do  :diffoff <CR>

" easier moving between tabs
map <leader>n  <esc>:tabprevious<CR>
map <leader>m  <esc>:tabnext<CR>

" folding shortcuts
map <leader>f  <esc>zM
map <leader>o  <esc>zA

" recorded macros
let debb = 'Odebugger;'
map <leader>id @=debb<CR>
let clog = 'Oconsole.log();€kl€kl'
map <leader>il @=clog<CR>

" set keymap=bulgarian-phonetic
imap <C-c> <CR><Esc>O

autocmd BufEnter *.css set ai sw=2 ts=2 sta et fo=croql filetype=css
autocmd BufEnter *.scss set ai sw=2 ts=2 sta et fo=croql filetype=sass
autocmd BufEnter *.js set ai sw=2 ts=2 sta et fo=croql filetype=javascript
autocmd BufEnter *.jsx set ai sw=2 ts=2 sta et fo=croql filetype=javascript
autocmd BufEnter *.html set ai sw=2 ts=2 sta et fo=croql filetype=javascript

set list
set listchars=tab:>-,trail:~,extends:>,precedes:<

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

autocmd VimEnter * wincmd p
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" JavaScript congifugration
set t_Co=256
syntax on

if has('gui_running')
  set guifont=Source\ Code\ Pro\ for\ Powerline:h11
endif


colorscheme desert
" These are the tweaks I apply to YCM's config, you don't need them but they
" might help.
" " YCM gives you popups and splits by default that some people might not
" like, so these should tidy it up a bit for you.
" let g:ycm_add_preview_to_completeopt=0
" let g:ycm_confirm_extra_conf=0
" set completeopt-=preview
