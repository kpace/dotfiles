" Vundle configuration

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
set runtimepath+=~/.vim/bundle/YouCompleteMe
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin' " show modified files in NERDTree
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-commentary'
Plugin 'mileszs/ack.vim'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" Python Plugins
Plugin 'nvie/vim-flake8'
Plugin 'jnurmine/Zenburn'
Plugin 'hdima/python-syntax' "better Python syntax

let python_highlight_all=1

" JS Plugins
Plugin 'jelera/vim-javascript-syntax'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'Raimondi/delimitMate'
Plugin 'Valloric/YouCompleteMe'
Plugin 'marijnh/tern_for_vim'
Plugin 'scrooloose/syntastic'

" scrooloose/syntastic configurations
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_javascript_checkers=['eslint']

" gitgutter config
let g:gitgutter_highlight_lines = 0

" Ctrlp config
set wildignore+=*/tmp/*,*/node_modules/*,*/bower_components/*,*/dist/*,*.so,*.swp,*.zip,*.pyc,*.sql

let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_custom_ignore = 'node_modules\|bower_components\|.git|.pyc'

" Custom configurations
set number relativenumber
set cursorline 
set hlsearch 
set ic
set smartcase 
set splitbelow
set splitright
set encoding=utf-8
let mapleader=" " " map <Leader> to <Space>

" split navigations
nnoremap <S-J> <C-W><C-J>
nnoremap <S-K> <C-W><C-K>
nnoremap <S-L> <C-W><C-L>
nnoremap <S-H> <C-W><C-H>

nnoremap % v%

nmap oo <Esc>k " insert new line under without leaving normal mode
nmap OO  <Esc>j " insert new line above  without leaving normal mode
nmap nf  :NERDTreeFind<CR>
nmap mf  :NERDTreeToggle<CR>
nmap ff  :Ack<Space>
inoremap jj <Esc>
map <leader>ev  :tabe ~/.vimrc <CR>
map <leader>sv  :source ~/.vimrc <CR>
map <leader>w  :w <CR>
map <leader>c  :tabc <CR>
map <leader>e  :tabe <CR>
map <leader>p  :CtrlPClearAllCaches <CR>
map <leader>dt  :diffthis <CR>
map <leader>do  :diffoff <CR>

" recorded macros
let debb = 'Odebugger;'
map <leader>id @=debb<CR>
let clog = 'Oconsole.log();€kl€kl'
map <leader>il @=clog<CR>

" set keymap=bulgarian-phonetic
imap <C-c> <CR><Esc>O
"set tabs
filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=2
" when indenting with '>', use 4 spaces width
set shiftwidth=2
" On pressing tab, insert 4 spaces
set expandtab
set path=/home/kpace/dev/projects
set path+=/home/kpace/Desktop

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>


autocmd VimEnter * wincmd p
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree



" JavaScript congifugration
set t_Co=256
syntax on

colorscheme zenburn
"colorscheme distinguished
" These are the tweaks I apply to YCM's config, you don't need them but they
" might help.
" " YCM gives you popups and splits by default that some people might not
" like, so these should tidy it up a bit for you.
" let g:ycm_add_preview_to_completeopt=0
" let g:ycm_confirm_extra_conf=0
" set completeopt-=preview
